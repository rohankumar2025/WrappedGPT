{"version":3,"sources":["components/Navbar.js","components/ListItem.js","components/GPT.js","components/List.js","components/Spotify.js","components/Login.js","App.js","index.js"],"names":["Navbar","props","_useState","useState","_useState2","_slicedToArray","isDropdownOpen","setIsDropdownOpen","handleDropdownClick","searchLength","setSearchLength","React","createElement","className","onClick","setSearchQuery","setIsGettingRecommendations","isLoading","concat","FontAwesomeIcon","icon","faCheck","window","localStorage","removeItem","setToken","ListItem","isPopupVisible","setIsPopupVisible","useEffect","timer","setTimeout","clearTimeout","number","src","track","picture","alt","name","explicit","artist","duration","minutes","Math","floor","seconds","secondsString","toString","getFormattedSongDuration","faEllipsisH","open","link","configuration","Configuration","organization","apiKey","OpenAIApi","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","List","prevSearchQuery","setPrevSearchQuery","_useState3","_useState4","prevSearchLength","setPrevSearchLength","_useState5","_useState6","_useState7","_useState8","songList","setSongList","_useState9","_useState10","artistList","setArtistList","_useState11","_useState12","debouncedSearchUserTracks","setDebouncedSearchUserTracks","searchUserTracks","useCallback","_asyncToGenerator","_callee","responseTracks1","responseTracks2","responseArtists1","responseArtists2","first50Songs","second50Songs","first50Artists","second50Artists","_context","setIsLoading","axios","get","headers","Authorization","token","params","limit","time_range","offset","data","items","map","artists","album","images","url","duration_ms","popularity","external_urls","spotify","_toConsumableArray","index","console","log","t0","setItem","debouncedSearch","timeout","searchQuery","isGettingRecommendations","item","STATE_VAL","require","randomBytes","loginEndpoint","Login","href","App","hash","location","getItem","substring","split","find","elem","startsWith","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5b00077b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Navbar.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\nfunction Navbar(props) {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n\n  const logout = () => {\n    window.localStorage.removeItem('token');\n    props.setToken('');\n  };\n\n  const handleDropdownClick = (searchLength) => {\n    props.setSearchLength(searchLength);\n    setIsDropdownOpen(false);\n  }\n\n  return (\n    <nav className=\"Navbar\">\n      <div className=\"Navbar-left\" >\n        <button className=\"Navbar-button\" onClick={() => { props.setSearchQuery('artists'); props.setIsGettingRecommendations(false) } }>\n          Artists\n        </button>\n        <button className=\"Navbar-button\" onClick={() => { props.setSearchQuery('tracks'); props.setIsGettingRecommendations(false) } }>\n          Songs\n        </button>\n        {/*\n        <button className=\"Navbar-button\" onClick={() => props.setIsGettingRecommendations(true)}>\n          Recommendations\n          <span className=\"beta-subtext\">Beta</span>\n        </button>\n  */}\n\n        {props.isLoading && <div className=\"loading-circle\"></div>}\n      </div>\n      <div className=\"Navbar-right\">\n        <div className={`Navbar-dropdown ${isDropdownOpen ? 'open' : ''}`}>\n          <button className=\"Navbar-button\" onClick={toggleDropdown}>\n            Options\n          </button>\n          <div className=\"Navbar-dropdown-content\">\n            <button className = \"Navbar-dropdown-button\" onClick={() => handleDropdownClick('short_term')}>Short Term\n              { props.searchLength === 'short_term' && <FontAwesomeIcon icon={faCheck} className=\"Navbar-dropdown-checkmark\" /> }\n            </button>\n            <button className = \"Navbar-dropdown-button\" onClick={() => handleDropdownClick('medium_term')}>Medium Term\n            { props.searchLength === 'medium_term' && <FontAwesomeIcon icon={faCheck} className=\"Navbar-dropdown-checkmark\" /> }\n            </button>\n            <button className = \"Navbar-dropdown-button\" onClick={() => handleDropdownClick('long_term')}>Long Term\n            { props.searchLength === 'long_term' && <FontAwesomeIcon icon={faCheck} className=\"Navbar-dropdown-checkmark\" /> }\n            </button>\n          </div>\n        </div>\n        <button className=\"Navbar-login-button\" onClick={logout}>\n          Log Out\n        </button>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport './List.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons';\n\nfunction ListItem(props) {\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\n\n  const getFormattedSongDuration = (duration) => {\n    if (props.track.duration == null) {\n      return '';\n    }\n    const minutes = Math.floor(duration / 60000);\n    const seconds = Math.floor((duration / 1000) % 60);\n    let secondsString = seconds.toString();\n    if (seconds < 10) {\n      secondsString = '0' + secondsString;\n    }\n\n    return minutes.toString() + ':' + secondsString;\n  };\n\n  const handlePopupClick = () => {\n    window.open(props.track.link, '_blank');\n    setIsPopupVisible(false);\n  };\n\n  useEffect(() => {\n    let timer;\n    if (isPopupVisible) {\n      timer = setTimeout(() => {\n        setIsPopupVisible(false);\n      }, 1000);\n    }\n    return () => clearTimeout(timer);\n  }, [isPopupVisible]);\n\n  return (\n    <div className=\"ListItem\">\n      <div className=\"number\">{props.number}.</div>\n      <img className=\"box\" src={props.track.picture} alt=\"\" />\n      <div className=\"info\">\n        <div className=\"songName\">{props.track.name}</div>\n        <div className=\"artist\">\n          {props.track.explicit && <span className=\"explicit\">E</span>}\n          {props.track.artist}\n        </div>\n      </div>\n      <div className=\"duration\">{getFormattedSongDuration(props.track.duration)}</div>\n      <div className=\"ellipsis\" onClick={() => setIsPopupVisible(!isPopupVisible)}>\n        <FontAwesomeIcon icon={faEllipsisH} />\n        {isPopupVisible && (\n          <div className=\"popup\" onClick={handlePopupClick}>\n            <span className=\"popupText\">Open With Spotify</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ListItem;\n","import { OpenAIApi, Configuration } from 'openai';\n\nconst configuration = new Configuration({\n    organization: \"org-3WYeVyMmjbH45Ue2uzXNHMA5\",\n    apiKey: \"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\"\n})\n\nconst openai = new OpenAIApi(configuration);\n\nexport default openai;","import React, { useState, useEffect, useCallback } from 'react';\nimport './List.css'\nimport ListItem from './ListItem';\nimport axios from 'axios';\nimport openai from './GPT'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\n\nfunction List(props) {\n  const [prevSearchQuery, setPrevSearchQuery] = useState('')\n  const [prevSearchLength, setPrevSearchLength] = useState('')\n  const [suggestedSongList, setSuggestedSongList] = useState([])\n  const [songList, setSongList] = useState([])\n  const [artistList, setArtistList] = useState([])\n  const [debouncedSearchUserTracks, setDebouncedSearchUserTracks] = useState(null)\n\n  const searchUserTracks = useCallback(async () => {\n    try {\n      props.setIsLoading(true)\n      const responseTracks1 = await axios.get(`https://api.spotify.com/v1/me/top/tracks`, {\n        headers: { Authorization: `Bearer ${props.token}` },\n        params: {\n          limit: 50,\n          time_range: props.searchLength\n        }\n      })\n      const responseTracks2 = await axios.get(`https://api.spotify.com/v1/me/top/tracks`, {\n          headers: {\n              Authorization: `Bearer ${props.token}`\n          },\n          params: {\n            limit: 50,\n            offset: 49,\n            time_range: props.searchLength\n          }\n      })\n\n      const responseArtists1 = await axios.get(`https://api.spotify.com/v1/me/top/artists`, {\n        headers: { Authorization: `Bearer ${props.token}` },\n        params: {\n          limit: 50,\n          time_range: props.searchLength\n        }\n      })\n      const responseArtists2 = await axios.get(`https://api.spotify.com/v1/me/top/artists`, {\n          headers: {\n              Authorization: `Bearer ${props.token}`\n          },\n          params: {\n            limit: 50,\n            offset: 49,\n            time_range: props.searchLength\n          }\n      })\n\n      const first50Songs = responseTracks1.data.items.map(track => (\n        { name: track.name, artist: track.artists[0].name, picture: track.album.images[0].url, explicit: track.explicit, duration: track.duration_ms, popularity: track.popularity, link: track.external_urls.spotify }\n      ))\n\n      const second50Songs = responseTracks2.data.items.slice(1).map(track => (\n        { name: track.name, artist: track.artists[0].name, picture: track.album.images[0].url, explicit: track.explicit, duration: track.duration_ms, popularity: track.popularity, link: track.external_urls.spotify }\n      ))\n\n      setSongList([...first50Songs, ...second50Songs])\n\n      const first50Artists = responseArtists1.data.items.map((artist, index) => (\n        { name: artist.name, picture: artist.images[0].url, link: artist.external_urls.spotify }\n      ))\n\n      const second50Artists = responseArtists2.data.items.slice(1).map((artist, index) => (\n        { name: artist.name, picture: artist.images[0].url, link: artist.external_urls.spotify }\n      ))\n\n      setArtistList([...first50Artists, ...second50Artists])\n\n      console.log(\"Performed API Calls\")\n      props.setIsLoading(false)\n    } catch (error) {\n      console.error(error)\n      window.localStorage.setItem(\"token\", '')\n    }\n  }, [props.searchLength]);\n\n  const debouncedSearch = useCallback(() => {\n    if (debouncedSearchUserTracks) {\n      clearTimeout(debouncedSearchUserTracks);\n    }\n    const timeout = setTimeout(() => {\n      searchUserTracks();\n    }, 500);\n    setDebouncedSearchUserTracks(timeout);\n  }, [searchUserTracks]);\n\n  useEffect(() => {\n    if ((prevSearchQuery !== props.searchQuery) || (prevSearchLength !== props.searchLength)) {\n      debouncedSearch();\n      setPrevSearchQuery(props.searchQuery);\n      setPrevSearchLength(props.searchLength);\n    }\n  }, [props.searchLength, debouncedSearch]);\n  \n  /*\n  const getSuggestedSongList = useCallback(async (songs) => {\n    try {\n      if (!props.isLoading) {\n        props.setIsLoading(true);\n  \n        const currSongList = songs.map(song => `${song.name}--${song.artist}`).join(',');\n  \n        console.log(\"Curr Song List \" + currSongList);\n  \n        const completion = await openai.createChatCompletion({\n          model: \"gpt-3.5-turbo\",\n          messages: [\n            {\n              role: \"assistant\",\n              content: `I want you to act as a song recommender. I will show you my top tracks listened to, and you will suggest 25 songs that are similar to those that I have listened to. Can you please suggest me 25 songs similar to these 99 that I have been listening to: ${currSongList}? Please omit any introduction text and just provide a list of songs separated by hashes. (e.g. song1--artist1#song2--artist2#song3--artist3#...). To repeat, do NOT provide a numbered list.`,\n            },\n          ],\n        });\n\n        props.setIsLoading(true)\n  \n        console.log(\n          'Received response from openai: ',\n          completion.data.choices[0].message.content\n        );\n  \n        const suggSongList = completion.data.choices[0].message.content.split('#');\n  \n        const fetchSongData = async () => {\n          for (const song of suggSongList) {\n            console.log('Sending', song, 'to Spotify API');\n  \n            const response = await axios.get(`https://api.spotify.com/v1/search?q=${song}&type=track&limit=1`, {\n              headers: { Authorization: `Bearer ${props.token}` },\n            });\n  \n            console.log('Received response from Spotify API: ', response.data.tracks.items[0].name);\n  \n            const track = response.data.tracks.items[0];\n            const songItem = { name: track.name, artist: track.artists[0].name, picture: track.album.images[0].url, duration: track.duration_ms, popularity: track.popularity, link: track.external_urls.spotify };\n            setSuggestedSongList(prevList => [...prevList, songItem]);\n          }\n  \n          props.setIsLoading(false);\n        };\n  \n        fetchSongData();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, [props, setSuggestedSongList]);\n  */\n  \n    return (\n      <div>\n      { /*(props.isGettingRecommendations) && suggestedSongList.length > 0 && (\n        <ul>\n          {suggestedSongList.map((item, index) => (\n            <ListItem key={index} track={item} number={index + 1} />\n          ))}\n        </ul>\n          ) */}\n      { /* (props.isGettingRecommendations && suggestedSongList.length === 0) && (\n        <div className=\"loading-circle-large\"></div>\n      ) */}\n\n      {(props.searchQuery === 'artists' && artistList.length !== 0 && !props.isGettingRecommendations) && (\n        <ul className='song-list'>\n          {artistList.map((item, index) => (\n            <ListItem key={index} track={item} number={index + 1} />\n          ))}\n        </ul>\n      )}\n\n\n      {(props.searchQuery === 'tracks' && songList.length !== 0 && !props.isGettingRecommendations) && (\n        <ul className='song-list'>\n          {songList.map((item, index) => (\n            <ListItem key={index} track={item} number={index + 1} />\n          ))}\n        </ul>\n      )}\n\n      {/*props.isGettingRecommendations && suggestedSongList.length >= 20 && (\n        <button className=\"more-suggestions-button\" onClick={() => { if (!props.isLoading) { props.setIsLoading(true); getSuggestedSongList(songList) }}}>\n          <FontAwesomeIcon icon={props.isLoading ? faEllipsisH : faPlus} className=\"plusIcon\" />\n        </button>\n      )*/}\n    </div>\n  );\n  }\n\nexport default List;","const CLIENT_ID = \"78be0496eccd4f789d4872bb3b0a1c6d\"\n//const REDIRECT_URI = \"http://localhost:3000/callback\"\nconst REDIRECT_URI = \"https://rohankumar2025.github.io/WrappedGPT/\"\nconst AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\"\nconst RESPONSE_TYPE = \"token\"\nconst SCOPES = ['user-top-read']\nconst STATE_VAL = require('crypto').randomBytes(20).toString('hex');\n\n\nexport const loginEndpoint = `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&scope=${SCOPES}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}&show_dialog=true&state=${STATE_VAL}`","import React from 'react';\nimport './Login.css';\nimport { loginEndpoint } from './Spotify';\n\nfunction Login() {\n  return (\n    <div className=\"Login\">\n      <div className=\"Login-container\">\n        <h1 className=\"Login-title\">WrappedGPT</h1>\n        <a  className=\"Login-button\" href={loginEndpoint}> Connect to Spotify</a>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport List from './components/List';\nimport Login from './components/Login';\nimport './App.css';\n\nfunction App() {\n  const [token, setToken] = useState('');\n  const [searchQuery, setSearchQuery] = useState('tracks');\n  const [searchLength, setSearchLength] = useState('short_term')\n  const [isLoading, setIsLoading] = useState(true)\n  const [isGettingRecommendations, setIsGettingRecommendations] = useState(false)\n\n  useEffect(() => {\n    const hash = window.location.hash\n    let token = window.localStorage.getItem(\"token\")\n\n    if (!token && hash) {\n        token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1]\n\n        window.location.hash = \"\"\n        window.localStorage.setItem(\"token\", token)\n    }\n\n    setToken(token)\n    console.log(token)\n  }, [])\n\n  if (token === '') {\n    return (\n      <Login />\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar setToken = {setToken} setSearchQuery = {setSearchQuery} isLoading = {isLoading} setSearchLength = {setSearchLength} searchLength = {searchLength} setIsGettingRecommendations={setIsGettingRecommendations}/>\n      <List token = {token} searchQuery = {searchQuery} setIsLoading = {setIsLoading} searchLength = {searchLength} isGettingRecommendations={isGettingRecommendations}/>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}